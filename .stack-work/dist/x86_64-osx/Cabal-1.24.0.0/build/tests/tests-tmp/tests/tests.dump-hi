
==================== FINAL INTERFACE ====================
2016-09-28 15:26:31.879587 UTC

interface main@main:Main 8001
  interface hash: cc84c99e5a9f5de25b9cd56e7b186718
  ABI hash: 48c1c13476e15cff5b74c8d465ff670b
  export-list hash: 18d9908602a5117733d78568ff54a01f
  orphan hash: 849100f8ebdfe0a36969393bd79da7aa
  flag hash: 0b9a4bb2c3f9cf31bfbe5aaf05b0fd70
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.inc
  Main.lessThenThree
  Main.main
  Main.stringToUpper
  Main.xform1
  Main.xform2
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.3@hspec-2.2.3-3A7gcWeDS0m19mITkn1B7w
                      hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.3@quickcheck-io-0.1.3-5Hh2GbBZjnpHefdPBp5l4r
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1
                      transducers-0.1.0.0@transducers-0.1.0.0-Alm2F19OaEg3quahTdCHoB
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.3@quickcheck-io-0.1.3-5Hh2GbBZjnpHefdPBp5l4r:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA:Test.QuickCheck a3636f7c6b928d0bf1ca94109fdc4fa1
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Unicode 2343b0871604cc5116abba8f24d75b42
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.3@hspec-2.2.3-3A7gcWeDS0m19mITkn1B7w:Test.Hspec 3008fc44f12ec19c4fa900e0137653ce
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Runner 034a881e6958254a4c0f2864bbd589c8
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-12WIy50J3DO9ac2aAucsOq:Test.Hspec.Core.Spec 32c482e5247461f70a13ee0ebc759327
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations ca5f5a50dd0587de1f261c5a819c188f
import  -/  transducers-0.1.0.0@transducers-0.1.0.0-Alm2F19OaEg3quahTdCHoB:Transducers ae4c7fdeb015cf04f9a1654c3bc17659
9191212cc58648006a0b0dbd35aa9c62
  $s$fEq[] :: GHC.Classes.Eq [GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  (GHC.Classes.$fEq[]_$c==
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger)
                  Main.$s$fEq[]_$s$fEq[]_$c/= -}
0d4b3cd7371d3ba751ffd456e78286ea
  $s$fEq[]_$s$fEq[]_$c/= ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [GHC.Integer.Type.Integer])
                   (y :: [GHC.Integer.Type.Integer]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ GHC.Integer.Type.Integer
                      GHC.Integer.Type.$fEqInteger
                      x
                      y)) -}
6e5fb538e9f8509d5b1b6400ad8bfb3f
  $s$fShow[] :: GHC.Show.Show [GHC.Integer.Type.Integer]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Main.$s$fShow[]_$s$fShow[]_$cshow
                  Main.$s$fShow[]_$s$fShow[]_$cshowList -}
d14fd7adafb2de75e386fbcf622c79b4
  $s$fShow[]_$s$fShow[]_$cshow ::
    [GHC.Integer.Type.Integer] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Integer.Type.Integer]) ->
                 GHC.Show.$fShowInteger_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ef6da3640753cdd7fdef4a2da6bb3e52
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[GHC.Integer.Type.Integer]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[GHC.Integer.Type.Integer]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [GHC.Integer.Type.Integer]
                   GHC.Show.$fShowInteger_$cshowList
                   eta
                   eta1) -}
2bf35ed627c80426cdd9684a80085aa6
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [GHC.Integer.Type.Integer] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [GHC.Integer.Type.Integer])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.$fShowInteger_$cshowList eta eta1) -}
ef71d425c0337e1d001548aecbd0eb5c
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
5a9c65178e6ed7807c2e1c148f6e862a
  $seven2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
957aef3d20b9395ceb39702d9d4c3c89
  inc :: GHC.Num.Num a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: a) ->
                 GHC.Num.+ @ a $dNum x (GHC.Num.fromInteger @ a $dNum Main.inc1)) -}
261da9355d1ff6b46ac4be2fd1fc37a0
  inc1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
d8fca2675cfb07b8f3a934629af969ef
  lessThenThree :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char s 0# of ww2 { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# ww2 3#) }) -}
8cc2b81b8c28527c96166ac521517e57
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
397940632e5fc0f08d41a45ded92f446
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Options.defaultConfig
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
4013341fef24e71d66a2d42a5b1f5a21
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ [[GHC.Types.Char]]
                   Main.main19
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShow[]_$s$fShow[]2
                   GHC.Classes.$fEq[]_$s$fEq[]2
                   Main.main13
                   Main.main11) -}
63918472f8f442d98a7efaaf3ccfe1d5
  main11 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main12
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
b4e9cf0ebb5e6dff14c15c6123864995
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HM"#) -}
b2a330da5c1ca69469fd88b40b13bf14
  main13 :: [[GHC.Types.Char]]
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Main.main_a1
                        0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Main.main_a2
                        0# of ww1 { DEFAULT ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Main.main_a3
                        0# of ww3 { DEFAULT ->
                 let {
                   r1 :: [[GHC.Types.Char]]
                   = case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# ww1 3#) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# ww3 3#) of wild1 {
                            GHC.Types.False -> GHC.Types.[] @ [GHC.Types.Char]
                            GHC.Types.True
                            -> GHC.Types.:
                                 @ [GHC.Types.Char]
                                 Main.main18
                                 (GHC.Types.[] @ [GHC.Types.Char]) }
                       GHC.Types.True
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# ww3 3#) of wild1 {
                            GHC.Types.False
                            -> GHC.Base.++
                                 @ [GHC.Types.Char]
                                 (GHC.Types.[] @ [GHC.Types.Char])
                                 Main.main16
                            GHC.Types.True
                            -> GHC.Base.++
                                 @ [GHC.Types.Char]
                                 (GHC.Types.:
                                    @ [GHC.Types.Char]
                                    Main.main18
                                    (GHC.Types.[] @ [GHC.Types.Char]))
                                 Main.main16 } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 3#) of wild {
                   GHC.Types.False -> r1
                   GHC.Types.True
                   -> GHC.Base.++ @ [GHC.Types.Char] r1 Main.main14 } } } }) -}
a824b9e032a54885e7cca70bf9fad596
  main14 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main15
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
dd09581fa80bef30ef61ab8f57ba84e0
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Unicode.toUpper
                   Main.main_a1) -}
8d2ef98cbfbdd24fd9ef7c3fa8502a2e
  main16 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main17
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
4e7b1ef8e494bd45b0d61c2798b0493f
  main17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Unicode.toUpper
                   Main.main_a2) -}
e45addd7840bfcc020da1abccc3263c1
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Unicode.toUpper
                   Main.main_a3) -}
1b9c7e3a8f1924cf87d0a97fb4ecda96
  main19 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main27
                   Main.main20
                   GHC.Stack.Types.EmptyCallStack) -}
080300be529ea2696bbc691ac47f934b
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
1fa50ce48c566d4da1bf3c2f362e7e62
  main20 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main22
                   Main.main23
                   Main.main21) -}
289a48a7e21928ff9d1b08eb8288e1dd
  main21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
c08b88aabc760c18a38f4ed92b9c3d2e
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
6910c9c3c6a5aae8de6071a1c22eb5f6
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
dc1368b538d3adf9bf6299ad2493a97c
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tests/tests.hs"#) -}
aba526294b6f31231ddc37dfb5655e2e
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
240ab8dad47b0f89a1dfe20954a44a21
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
9a0851f709c8e948d19f9b978e9d5527
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
651109c25201767fd46a356e4a636e21
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "should transform"#) -}
fe007e4273061881a83c5be6c22704d8
  main29 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main30) -}
a339337db2af6456e47ded0c28e29d54
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
d5ce8a02f2f60d6af82b8a0228cc50d3
  main30 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main35
                   Main.main31
                   GHC.Stack.Types.EmptyCallStack) -}
6e082dd19a84da152a26e01dc21a11cc
  main31 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main34
                   Main.main33
                   Main.main34
                   Main.main32) -}
126bef0421e255e079101e52157ffc05
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
b18181d7943a6e2b9f331cd95ff4d418
  main33 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
5b22fd752bba623dcbfa868227e49932
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
6ca9e4077b33b8be36f2ba48f89a08f3
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
a4916efbcef1b5a974497a5ad1bde105
  main36 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main37
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4e41b8bf2f0a1a41adab56a260cddb8a
  main37 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main47
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main46
                        Main.main38
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
385326637ae7692c05c641c5c9706bcb
  main38 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ [GHC.Integer.Type.Integer]
                   Main.main42
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow[]
                   Main.$s$fEq[]
                   Main.main41
                   Main.main39) -}
c85a622f59be4bb6317c4ab25eb1984d
  main39 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (GHC.Enum.enumDeltaToInteger1
                   Main.inc1
                   Main.main40) -}
df1ce39eebd03c08a0e906194d3740df
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
59ab3f8c1c2f64538ea76a42eadefa4b
  main40 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
d7f22ee2e6fe74014b964689a668e727
  main41 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (Main.main_go
                   Main.$seven1
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
624f8c741db78847987553e776e61c31
  main42 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main27
                   Main.main43
                   GHC.Stack.Types.EmptyCallStack) -}
efa1c155422fcac3c376232861b32f59
  main43 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main45
                   Main.main22
                   Main.main45
                   Main.main44) -}
d8aabf985ac5806239e2a60540c5c897
  main44 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
5989bf8d59b2283115eadfb1d57ba04a
  main45 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
97cdccee7d81ad96e46370732652cdc5
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should transform lists without reducingFn & start value"#) -}
34bca9d6c202ad12f4d4d4c140df15a4
  main47 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main48) -}
64aa9f29f57db92c7cc77ff1ed57a818
  main48 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main35
                   Main.main49
                   GHC.Stack.Types.EmptyCallStack) -}
56888ae32c67f8bd30d1a0a46b0ad12c
  main49 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main51
                   Main.main33
                   Main.main51
                   Main.main50) -}
819ebe431fe28bebcb5ac66a95314ae9
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main67
                   Main.main6) -}
18aedfb119934b6b9929cd83aec47904
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 65#) -}
f2023314c99316d76b4408c41544dfc3
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
aa7f8ae6db6c0d82477547dc431119a1
  main52 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main53
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
6bb6984857ddd590b20510f063ecb885
  main53 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main62
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main61
                        Main.main54
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
bda9e8d1831525e2d044d369bab747bf
  main54 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Integer.Type.Integer
                   Main.main58
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInteger
                   GHC.Integer.Type.$fEqInteger
                   Main.main56
                   Main.main55) -}
345628ad4926d12a01c55346a7b21719
  main55 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (106) -}
03d3bb4aeda47c21d7d2574aa9931304
  main56 :: GHC.Integer.Type.Integer
  {- Unfolding: (Main.main_go1 Main.$seven1 Main.main57) -}
0bd04e88893ea31f0e331bce12bcb498
  main57 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (100) -}
87b32526ef4c0c8e500d4ee1dfe16365
  main58 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main27
                   Main.main59
                   GHC.Stack.Types.EmptyCallStack) -}
6d282ab3b5c75e309b53750470dc55aa
  main59 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main32
                   Main.main22
                   Main.main32
                   Main.main60) -}
2b67849449dfa8f4d2c4d90eebf0050e
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main52
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
eda2874369c5ec1de41857c5e273c200
  main60 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
ce381b80a59744cd6983ec6e228b1f95
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should be able to transform a list and sum the values"#) -}
89c21f1d83863d4c8d06a351b045f0a3
  main62 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main63) -}
a5ad8539cecb75421242821807f85097
  main63 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main35
                   Main.main64
                   GHC.Stack.Types.EmptyCallStack) -}
2de8cd4ea71baf9a856f4d4a4dc2dccd
  main64 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main66
                   Main.main33
                   Main.main66
                   Main.main65) -}
48672b4d9fa9faff5fec170af88c83bc
  main65 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 63#) -}
2250df80585116f64e7deaf62aebafeb
  main66 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
e4904b7ac7b20862dc5348991a1da884
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main69
                   Main.main68) -}
f92ab74c6117c84c4658ecac7cd470d2
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ransducers"#) -}
465554ea369d8dd65a9d2da2cad729b7
  main69 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'T'#) -}
028ca28c51c62e1db6a8060584579a9a
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main36
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
e613c4ad76cf306bd1aed876c0920746
  main70 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ebf7a1222078414ee7433480f5b60502
  main8 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main9
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
2b4adbe806cbec0a05c18ceb1422844a
  main9 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main29
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main28
                        Main.main10
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
a81add68124a090a9b925f453720335f
  main_a1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "hm"#) -}
d47b583850086b76e891ef1089d2bdb1
  main_a2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "don't show"#) -}
a52d2d5640a937a9979e27d8b71615db
  main_a3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "testtest"#) -}
9e9fbd77fdb1c8d08e8832b9a7dedb24
  main_go ::
    GHC.Integer.Type.Integer
    -> [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
dddbb911d87a4142d2d5bb23fc24ddd6
  main_go1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
5fc99e76fe45efa93cd74841a2e0e11d
  stringToUpper :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 GHC.Base.build
                   @ GHC.Types.Char
                   (\ @ b1
                      (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b1
                      (GHC.Base.mapFB
                         @ GHC.Types.Char
                         @ b1
                         @ GHC.Types.Char
                         c
                         GHC.Unicode.toUpper)
                      n
                      s)) -}
3f111b1a440eb5a7768a4486d9811d43
  xform1 ::
    Transducers.ReducingFn r GHC.Integer.Type.Integer
    -> Transducers.ReducingFn r GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,1*C1(C1(U))><L,U><S,U>,
     Unfolding: (\ @ r
                   (x :: Transducers.ReducingFn r GHC.Integer.Type.Integer)
                   (r1 :: r)
                   (a1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger#
                        (GHC.Integer.Type.remInteger a1 Main.$seven2)
                        Main.$seven1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> x r1 (GHC.Integer.Type.plusInteger a1 Main.inc1)
                   GHC.Types.True -> r1 } }) -}
d973193c3f12b1b0c31aa0c8722a3f2b
  xform2 ::
    Transducers.ReducingFn r GHC.Base.String
    -> Transducers.ReducingFn r GHC.Base.String
  {- Arity: 3, Strictness: <L,1*C1(C1(U))><L,U><S,U>,
     Unfolding: (\ @ r
                   (x :: Transducers.ReducingFn r GHC.Base.String)
                   (r1 :: r)
                   (a1 :: GHC.Base.String) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char a1 0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww2 3#) of wild {
                   GHC.Types.False -> r1
                   GHC.Types.True -> x r1 (Main.stringToUpper a1) } }) -}
"SPEC/Main $fEq[] @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                        GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[] @ GHC.Integer.Type.Integer $dEq = Main.$s$fEq[]
"SPEC/Main $fEq[]_$c/= @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[]_$c/= @ GHC.Integer.Type.Integer $dEq
  = Main.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Main $fShow[] @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                            GHC.Integer.Type.Integer)
  GHC.Show.$fShow[] @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                   GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshow @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                       GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowList @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowsPrec @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

